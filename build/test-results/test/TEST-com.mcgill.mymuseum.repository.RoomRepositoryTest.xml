<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.mcgill.mymuseum.repository.RoomRepositoryTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2022-11-27T04:26:29" hostname="DESKTOP-DD9SDJD" time="0.021">
  <properties/>
  <testcase name="testPersistAndLoadStorageRoom()" classname="com.mcgill.mymuseum.repository.RoomRepositoryTest" time="0.01"/>
  <testcase name="testPersistAndLoadDisplayRoom()" classname="com.mcgill.mymuseum.repository.RoomRepositoryTest" time="0.01"/>
  <system-out><![CDATA[2022-11-26 23:26:29.371  INFO 24424 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.mcgill.mymuseum.repository.RoomRepositoryTest], using SpringBootContextLoader
2022-11-26 23:26:29.371  INFO 24424 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.mcgill.mymuseum.repository.RoomRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-11-26 23:26:29.371  INFO 24424 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.mcgill.mymuseum.repository.RoomRepositoryTest]: RoomRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-11-26 23:26:29.372  INFO 24424 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.mcgill.mymuseum.MyMuseumApplication for test class com.mcgill.mymuseum.repository.RoomRepositoryTest
2022-11-26 23:26:29.373  INFO 24424 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-11-26 23:26:29.373  INFO 24424 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@291fba9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@29ff84fa, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@156b31d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@168ffb0, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@ca90087, org.springframework.test.context.support.DirtiesContextTestExecutionListener@59a49dbc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6dde03ce, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2b0df4ba, org.springframework.test.context.event.EventPublishingTestExecutionListener@6f647464, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@12504d49, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@f8dfcbe, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4be171d1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@76afb9d, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@17c0d43c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@77c8b276]
Hibernate: select nextval ('hibernate_sequence')
Hibernate: insert into room (name, my_museum_museum_id, dtype, room_id) values (?, ?, 'StorageRoom', ?)
Hibernate: select room0_.room_id as room_id2_5_0_, room0_.name as name3_5_0_, room0_.my_museum_museum_id as my_museu5_5_0_, room0_.room_capacity as room_cap4_5_0_, room0_.dtype as dtype1_5_0_, artifacts1_.room_room_id as room_roo6_1_1_, artifacts1_.artifact_id as artifact1_1_1_, artifacts1_.artifact_id as artifact1_1_2_, artifacts1_.description as descript2_1_2_, artifacts1_.my_museum_museum_id as my_museu5_1_2_, artifacts1_.name as name3_1_2_, artifacts1_.room_room_id as room_roo6_1_2_, artifacts1_.url as url4_1_2_, mymuseum2_.museum_id as museum_i1_4_3_, mymuseum2_.address as address2_4_3_, mymuseum2_.price_per_pass as price_pe3_4_3_, president3_.account_id as account_2_0_4_, president3_.email as email3_0_4_, president3_.first_name as first_na4_0_4_, president3_.last_name as last_nam5_0_4_, president3_.password as password6_0_4_, president3_.hourly_wage as hourly_w7_0_4_, president3_.my_museum_museum_id as my_museu9_0_4_, president3_.over_time_hourly_wage as over_tim8_0_4_, storageroo4_.room_id as room_id2_5_5_, storageroo4_.name as name3_5_5_, storageroo4_.my_museum_museum_id as my_museu5_5_5_, loan5_.loan_id as loan_id1_2_6_, loan5_.artifact_artifact_id as artifact5_2_6_, loan5_.end_date as end_date2_2_6_, loan5_.loan_status as loan_sta3_2_6_, loan5_.loanee_account_id as loanee_a6_2_6_, loan5_.my_museum_museum_id as my_museu7_2_6_, loan5_.start_date as start_da4_2_6_, visitor6_.account_id as account_2_0_7_, visitor6_.email as email3_0_7_, visitor6_.first_name as first_na4_0_7_, visitor6_.last_name as last_nam5_0_7_, visitor6_.password as password6_0_7_, visitor6_.my_museum_museum_id as my_museu9_0_7_, mymuseum7_.museum_id as museum_i1_4_8_, mymuseum7_.address as address2_4_8_, mymuseum7_.price_per_pass as price_pe3_4_8_ from room room0_ left outer join artifact artifacts1_ on room0_.room_id=artifacts1_.room_room_id left outer join my_museum mymuseum2_ on artifacts1_.my_museum_museum_id=mymuseum2_.museum_id left outer join account president3_ on mymuseum2_.museum_id=president3_.my_museum_museum_id and president3_.dtype='President' left outer join room storageroo4_ on mymuseum2_.museum_id=storageroo4_.my_museum_museum_id and storageroo4_.dtype='StorageRoom' left outer join loan loan5_ on artifacts1_.artifact_id=loan5_.artifact_artifact_id left outer join account visitor6_ on loan5_.loanee_account_id=visitor6_.account_id left outer join my_museum mymuseum7_ on loan5_.my_museum_museum_id=mymuseum7_.museum_id where room0_.room_id=?
Hibernate: select room0_.room_id as room_id2_5_, room0_.name as name3_5_, room0_.my_museum_museum_id as my_museu5_5_, room0_.room_capacity as room_cap4_5_, room0_.dtype as dtype1_5_ from room room0_
Hibernate: select artifacts0_.room_room_id as room_roo6_1_0_, artifacts0_.artifact_id as artifact1_1_0_, artifacts0_.artifact_id as artifact1_1_1_, artifacts0_.description as descript2_1_1_, artifacts0_.my_museum_museum_id as my_museu5_1_1_, artifacts0_.name as name3_1_1_, artifacts0_.room_room_id as room_roo6_1_1_, artifacts0_.url as url4_1_1_, mymuseum1_.museum_id as museum_i1_4_2_, mymuseum1_.address as address2_4_2_, mymuseum1_.price_per_pass as price_pe3_4_2_, president2_.account_id as account_2_0_3_, president2_.email as email3_0_3_, president2_.first_name as first_na4_0_3_, president2_.last_name as last_nam5_0_3_, president2_.password as password6_0_3_, president2_.hourly_wage as hourly_w7_0_3_, president2_.my_museum_museum_id as my_museu9_0_3_, president2_.over_time_hourly_wage as over_tim8_0_3_, storageroo3_.room_id as room_id2_5_4_, storageroo3_.name as name3_5_4_, storageroo3_.my_museum_museum_id as my_museu5_5_4_, loan4_.loan_id as loan_id1_2_5_, loan4_.artifact_artifact_id as artifact5_2_5_, loan4_.end_date as end_date2_2_5_, loan4_.loan_status as loan_sta3_2_5_, loan4_.loanee_account_id as loanee_a6_2_5_, loan4_.my_museum_museum_id as my_museu7_2_5_, loan4_.start_date as start_da4_2_5_, visitor5_.account_id as account_2_0_6_, visitor5_.email as email3_0_6_, visitor5_.first_name as first_na4_0_6_, visitor5_.last_name as last_nam5_0_6_, visitor5_.password as password6_0_6_, visitor5_.my_museum_museum_id as my_museu9_0_6_, mymuseum6_.museum_id as museum_i1_4_7_, mymuseum6_.address as address2_4_7_, mymuseum6_.price_per_pass as price_pe3_4_7_ from artifact artifacts0_ left outer join my_museum mymuseum1_ on artifacts0_.my_museum_museum_id=mymuseum1_.museum_id left outer join account president2_ on mymuseum1_.museum_id=president2_.my_museum_museum_id and president2_.dtype='President' left outer join room storageroo3_ on mymuseum1_.museum_id=storageroo3_.my_museum_museum_id and storageroo3_.dtype='StorageRoom' left outer join loan loan4_ on artifacts0_.artifact_id=loan4_.artifact_artifact_id left outer join account visitor5_ on loan4_.loanee_account_id=visitor5_.account_id left outer join my_museum mymuseum6_ on loan4_.my_museum_museum_id=mymuseum6_.museum_id where artifacts0_.room_room_id=?
Hibernate: delete from room where room_id=?
Hibernate: select nextval ('hibernate_sequence')
Hibernate: insert into room (name, my_museum_museum_id, room_capacity, dtype, room_id) values (?, ?, ?, 'DisplayRoom', ?)
Hibernate: select room0_.room_id as room_id2_5_0_, room0_.name as name3_5_0_, room0_.my_museum_museum_id as my_museu5_5_0_, room0_.room_capacity as room_cap4_5_0_, room0_.dtype as dtype1_5_0_, artifacts1_.room_room_id as room_roo6_1_1_, artifacts1_.artifact_id as artifact1_1_1_, artifacts1_.artifact_id as artifact1_1_2_, artifacts1_.description as descript2_1_2_, artifacts1_.my_museum_museum_id as my_museu5_1_2_, artifacts1_.name as name3_1_2_, artifacts1_.room_room_id as room_roo6_1_2_, artifacts1_.url as url4_1_2_, mymuseum2_.museum_id as museum_i1_4_3_, mymuseum2_.address as address2_4_3_, mymuseum2_.price_per_pass as price_pe3_4_3_, president3_.account_id as account_2_0_4_, president3_.email as email3_0_4_, president3_.first_name as first_na4_0_4_, president3_.last_name as last_nam5_0_4_, president3_.password as password6_0_4_, president3_.hourly_wage as hourly_w7_0_4_, president3_.my_museum_museum_id as my_museu9_0_4_, president3_.over_time_hourly_wage as over_tim8_0_4_, storageroo4_.room_id as room_id2_5_5_, storageroo4_.name as name3_5_5_, storageroo4_.my_museum_museum_id as my_museu5_5_5_, loan5_.loan_id as loan_id1_2_6_, loan5_.artifact_artifact_id as artifact5_2_6_, loan5_.end_date as end_date2_2_6_, loan5_.loan_status as loan_sta3_2_6_, loan5_.loanee_account_id as loanee_a6_2_6_, loan5_.my_museum_museum_id as my_museu7_2_6_, loan5_.start_date as start_da4_2_6_, visitor6_.account_id as account_2_0_7_, visitor6_.email as email3_0_7_, visitor6_.first_name as first_na4_0_7_, visitor6_.last_name as last_nam5_0_7_, visitor6_.password as password6_0_7_, visitor6_.my_museum_museum_id as my_museu9_0_7_, mymuseum7_.museum_id as museum_i1_4_8_, mymuseum7_.address as address2_4_8_, mymuseum7_.price_per_pass as price_pe3_4_8_ from room room0_ left outer join artifact artifacts1_ on room0_.room_id=artifacts1_.room_room_id left outer join my_museum mymuseum2_ on artifacts1_.my_museum_museum_id=mymuseum2_.museum_id left outer join account president3_ on mymuseum2_.museum_id=president3_.my_museum_museum_id and president3_.dtype='President' left outer join room storageroo4_ on mymuseum2_.museum_id=storageroo4_.my_museum_museum_id and storageroo4_.dtype='StorageRoom' left outer join loan loan5_ on artifacts1_.artifact_id=loan5_.artifact_artifact_id left outer join account visitor6_ on loan5_.loanee_account_id=visitor6_.account_id left outer join my_museum mymuseum7_ on loan5_.my_museum_museum_id=mymuseum7_.museum_id where room0_.room_id=?
Hibernate: select room0_.room_id as room_id2_5_, room0_.name as name3_5_, room0_.my_museum_museum_id as my_museu5_5_, room0_.room_capacity as room_cap4_5_, room0_.dtype as dtype1_5_ from room room0_
Hibernate: select artifacts0_.room_room_id as room_roo6_1_0_, artifacts0_.artifact_id as artifact1_1_0_, artifacts0_.artifact_id as artifact1_1_1_, artifacts0_.description as descript2_1_1_, artifacts0_.my_museum_museum_id as my_museu5_1_1_, artifacts0_.name as name3_1_1_, artifacts0_.room_room_id as room_roo6_1_1_, artifacts0_.url as url4_1_1_, mymuseum1_.museum_id as museum_i1_4_2_, mymuseum1_.address as address2_4_2_, mymuseum1_.price_per_pass as price_pe3_4_2_, president2_.account_id as account_2_0_3_, president2_.email as email3_0_3_, president2_.first_name as first_na4_0_3_, president2_.last_name as last_nam5_0_3_, president2_.password as password6_0_3_, president2_.hourly_wage as hourly_w7_0_3_, president2_.my_museum_museum_id as my_museu9_0_3_, president2_.over_time_hourly_wage as over_tim8_0_3_, storageroo3_.room_id as room_id2_5_4_, storageroo3_.name as name3_5_4_, storageroo3_.my_museum_museum_id as my_museu5_5_4_, loan4_.loan_id as loan_id1_2_5_, loan4_.artifact_artifact_id as artifact5_2_5_, loan4_.end_date as end_date2_2_5_, loan4_.loan_status as loan_sta3_2_5_, loan4_.loanee_account_id as loanee_a6_2_5_, loan4_.my_museum_museum_id as my_museu7_2_5_, loan4_.start_date as start_da4_2_5_, visitor5_.account_id as account_2_0_6_, visitor5_.email as email3_0_6_, visitor5_.first_name as first_na4_0_6_, visitor5_.last_name as last_nam5_0_6_, visitor5_.password as password6_0_6_, visitor5_.my_museum_museum_id as my_museu9_0_6_, mymuseum6_.museum_id as museum_i1_4_7_, mymuseum6_.address as address2_4_7_, mymuseum6_.price_per_pass as price_pe3_4_7_ from artifact artifacts0_ left outer join my_museum mymuseum1_ on artifacts0_.my_museum_museum_id=mymuseum1_.museum_id left outer join account president2_ on mymuseum1_.museum_id=president2_.my_museum_museum_id and president2_.dtype='President' left outer join room storageroo3_ on mymuseum1_.museum_id=storageroo3_.my_museum_museum_id and storageroo3_.dtype='StorageRoom' left outer join loan loan4_ on artifacts0_.artifact_id=loan4_.artifact_artifact_id left outer join account visitor5_ on loan4_.loanee_account_id=visitor5_.account_id left outer join my_museum mymuseum6_ on loan4_.my_museum_museum_id=mymuseum6_.museum_id where artifacts0_.room_room_id=?
Hibernate: delete from room where room_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
